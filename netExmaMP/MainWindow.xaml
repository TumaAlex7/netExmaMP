<Window x:Class="netExmaMP.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:netExmaMP"
        mc:Ignorable="d"
        x:Name="Window"
        Title="MainWindow" Height="400" Width="600" MinHeight="200" MinWidth="500">
    <Window.Resources>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Border x:Name="DD" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                <Path x:Name="Arrow" HorizontalAlignment="Right" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{Binding ElementName=Window, Path=Foreground}"/>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DD" Storyboard.TargetProperty="(Panel.Background)">
                                    <DiscreteObjectKeyFrame Value="{TemplateBinding Foreground}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Border>
        </ControlTemplate>
        <Style TargetType="ComboBox">
            <Setter Property="Foreground" Value="{Binding ElementName=Menu, Path=Foreground}"/>
            <Setter Property="Background" Value="{Binding ElementName=Window, Path=Background}"/>
            <Setter Property="BorderBrush" Value="{Binding ElementName=Window, Path=Foreground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Template="{StaticResource ComboBoxToggleButton}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{Binding ElementName=Menu, Path=Foreground}"/>
                            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" 
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <Popup Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" PopupAnimation="Slide" Width="{TemplateBinding ActualWidth}">
                                <Border x:Name="DD" Background="{TemplateBinding Background}">
                                    <ScrollViewer>
                                        <StackPanel IsItemsHost="True"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ComboBoxItem">
            <Setter Property="Background" Value="{Binding ElementName=Menu, Path=Background}"/>
            <Setter Property="BorderBrush" Value="{Binding ElementName=Window, Path=Foreground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border x:Name="Border" Padding="2" BorderThickness="1" BorderBrush="{TemplateBinding Background}" Background="Transparent">
                            <ContentPresenter/>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush)">
                                                <DiscreteObjectKeyFrame Value="{TemplateBinding BorderBrush}" KeyTime="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background)">
                                                <DiscreteObjectKeyFrame Value="{TemplateBinding Background}" KeyTime="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disable"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="BorderBrush" Value="{Binding ElementName=Window, Path=Background}"/>
        </Style>
        <Style TargetType="MenuItem">
            <Setter Property="Background" Value="{Binding ElementName=Menu, Path=Background}"/>
            <Setter Property="BorderBrush" Value="{Binding ElementName=Window, Path=Background}"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="{Binding ElementName=Menu, Path=Background}"/>
            <Setter Property="Foreground" Value="{Binding ElementName=Menu, Path=Foreground}"/>
            <Setter Property="BorderBrush" Value="{Binding ElementName=Window, Path=Foreground}"/>
        </Style>
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{Binding ElementName=Menu, Path=Foreground}"/>
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="TogglePlayPause" Key="Space"/>
    </Window.InputBindings>
    <Window.CommandBindings>
        <CommandBinding Command="Open" Executed="Open_Executed"/>
        <CommandBinding Command="Properties" Executed="Properties_Executed"/>
        <CommandBinding Command="TogglePlayPause" Executed="TogglePlayPause_Executed"/>
        <CommandBinding Command="Play" Executed="Play_Executed" CanExecute="Play_CanExecute"/>
        <CommandBinding Command="Pause" Executed="Pause_Executed" CanExecute="Pause_CanExecute"/>
        <CommandBinding Command="NextTrack" Executed="NextTrack_Executed" CanExecute="NextTrack_CanExecute"/>
        <CommandBinding Command="PreviousTrack" Executed="PreviousTrack_Executed" CanExecute="PreviouseTrack_CanExecute"/>
        <CommandBinding Command="IncreaseVolume" Executed="IncreaseVolume_Executed"/>
        <CommandBinding Command="DecreaseVolume" Executed="DecreaseVolume_Executed"/>
        <CommandBinding Command="MuteVolume" Executed="MuteVolume_Executed"/>
    </Window.CommandBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Menu x:Name="Menu" IsMainMenu="True" Grid.ColumnSpan="3" BorderBrush="{Binding ElementName=Window, Path=Background}">
            <MenuItem Header="File">
                <MenuItem Header="Open" Command="Open"/>
                <MenuItem Header="Settings" Command="Properties"/>
            </MenuItem>
            <MenuItem Header="Playback">
                <MenuItem Header="Play" Command="Play"/>
                <MenuItem Header="Pause" Command="Pause"/>
                <Separator/>
                <MenuItem Header="NextTrack" Command="NextTrack"/>
                <MenuItem Header="PreviousTrack" Command="PreviousTrack"/>
                <Separator/>
                <MenuItem Header="IncreaseVolume" Command="IncreaseVolume"/>
                <MenuItem Header="Mute" Command="MuteVolume"/>
                <MenuItem Header="DecreaseVolume" Command="DecreaseVolume"/>
            </MenuItem>
        </Menu>
        <Expander Grid.Row="1" ExpandDirection="Right" Grid.ColumnSpan="2" BorderBrush="{Binding ElementName=Window, Path=Foreground}">
            <local:QueueViewer x:Name="QViewer"/>
        </Expander>
        <Grid Grid.Column="2" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.8*" MinWidth="64"/>
                    <ColumnDefinition Width="0.85*"/>
                    <ColumnDefinition Width="0.9*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.9*"/>
                    <ColumnDefinition Width="0.85*"/>
                    <ColumnDefinition Width="0.8*"/>
                </Grid.ColumnDefinitions>
                <ComboBox x:Name="SpeedCB" Margin="15,3,3,3" Height="18" ItemsSource="{Binding Speeds}"/>
                <ToggleButton x:Name="LoopTBtn" Grid.Column="1" Margin="1" IsThreeState="True" Height="{Binding ElementName=LoopTBtn, Path=ActualWidth}"
                        Style="{StaticResource LoopButtonStyle}" Foreground="{Binding ElementName=Window, Path=Foreground}" BorderBrush="{Binding ElementName=Menu, Path=Background}" Click="LoopTBtn_Click"/>
                <Button x:Name="BackBtn" Grid.Column="2" Margin="5" Height="{Binding ElementName=BackBtn, Path=ActualWidth}"
                        Style="{StaticResource BackButtonStyle}" Foreground="{Binding ElementName=Window, Path=Foreground}" BorderBrush="{Binding ElementName=Menu, Path=Background}" Click="BackBtn_Click"/>
                <ToggleButton x:Name="PlayPauseTBtn" Grid.Column="3" Margin="1"  Height="{Binding ElementName=PlayPauseTBtn, Path=ActualWidth}"
                        Style="{StaticResource PlayPauseButtonStyle}" Foreground="{Binding ElementName=Window, Path=Foreground}" Click="PlayPauseTBtn_Click"/>
                <Button x:Name="NextBtn" Grid.Column="4" Margin="5" Height="{Binding ElementName=NextBtn, Path=ActualWidth}"
                        Style="{StaticResource NextButtonStyle}" Foreground="{Binding ElementName=Window, Path=Foreground}" BorderBrush="{Binding ElementName=Menu, Path=Background}" Click="NextBtn_Click"/>
                <Button x:Name="ShuffleBtn" Grid.Column="5" Margin="5" Height="{Binding ElementName=ShuffleBtn, Path=ActualWidth}"
                        Style="{StaticResource ShuffleButtonStyle}" Foreground="{Binding ElementName=Window, Path=Foreground}" Click="ShuffleBtn_Click"/>
                <ToggleButton x:Name="VolumeTBtn" Grid.Column="6" Margin="3,3,15,3" Height="{Binding ElementName=VolumeTBtn, Path=ActualWidth}" IsChecked="True"
                        Style="{StaticResource VolumeButtonStyle}" Foreground="{Binding ElementName=Window, Path=Foreground}" Click="VolumeTBtn_Click" MouseEnter="VolumeTBtn_MouseEnter" MouseLeave="VolumeTBtn_MouseLeave"/>
                <Popup x:Name="VolumePopup" StaysOpen="False" PlacementTarget="{Binding ElementName=VolumeTBtn}" Placement="Right" Height="120" Width="20" MouseLeave="VolumeTBtn_MouseLeave">
                    <Slider x:Name="VolumeSlider" Background="{Binding ElementName=Menu, Path=Background}" Orientation="Vertical" Maximum="100" ValueChanged="VolumeSlider_ValueChanged"/>
                </Popup>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBox x:Name="TimeTB" PreviewTextInput="TimeTB_TextInput" VerticalContentAlignment="Center"/>
                <Label Grid.Column="1" x:Name="MaxTimeLabel"/>
                <Slider Grid.Column="2" x:Name="TimelaneSlider" Thumb.DragStarted="TimelaneSlider_DragStarted" Thumb.DragCompleted="TimelaneSlider_DragCompleted"/>
            </Grid>
        </Grid>
    </Grid>
</Window>
